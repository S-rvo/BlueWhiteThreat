#!/bin/bash

echo "üöÄ D√©ploiement de l'application Vue.js Target en PRODUCTION..."

# V√©rifier si Docker est install√©
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker n'est pas install√©. Veuillez installer Docker d'abord."
    exit 1
fi

# Nom de l'image et du conteneur
IMAGE_NAME="vue-target-prod"
CONTAINER_NAME="vue-target-container"
PORT="80"

# Arr√™ter et supprimer le conteneur existant
echo "üõë Arr√™t du conteneur existant..."
docker stop $CONTAINER_NAME 2>/dev/null || true
docker rm $CONTAINER_NAME 2>/dev/null || true

# Supprimer l'ancienne image
echo "üßπ Suppression de l'ancienne image..."
docker rmi $IMAGE_NAME 2>/dev/null || true

# Construire l'image de production
echo "üî® Construction de l'image Docker de production..."
docker build -f apps/target/dockerfile.prod -t $IMAGE_NAME .

# V√©rifier si la construction a r√©ussi
if [ $? -ne 0 ]; then
    echo "‚ùå Erreur lors de la construction de l'image"
    exit 1
fi

# D√©marrer le conteneur
echo "‚ñ∂Ô∏è  D√©marrage du conteneur de production..."
docker run -d \
  --name $CONTAINER_NAME \
  -p $PORT:80 \
  --restart unless-stopped \
  $IMAGE_NAME

# V√©rifier si le conteneur a d√©marr√©
if [ $? -eq 0 ]; then
    echo "‚è≥ Attente du d√©marrage du service..."
    sleep 5
    
    # V√©rifier le statut du conteneur
    if docker ps | grep -q $CONTAINER_NAME; then
        echo "‚úÖ Application d√©ploy√©e avec succ√®s en PRODUCTION !"
        echo "üåê Votre application est accessible sur : http://localhost"
        echo "üè• Health check : http://localhost/health"
        echo ""
        echo "üìã Commandes utiles :"
        echo "   - Voir les logs : docker logs -f $CONTAINER_NAME"
        echo "   - Arr√™ter : docker stop $CONTAINER_NAME"
        echo "   - Red√©marrer : docker restart $CONTAINER_NAME"
        echo "   - Voir les stats : docker stats $CONTAINER_NAME"
        echo "   - Acc√©der au conteneur : docker exec -it $CONTAINER_NAME sh"
        echo ""
        echo "üîí Configuration de production :"
        echo "   - Nginx avec compression gzip"
        echo "   - Headers de s√©curit√©"
        echo "   - Cache optimis√©"
        echo "   - Health checks int√©gr√©s"
        echo "   - Utilisateur non-root"
        echo "   - Red√©marrage automatique"
    else
        echo "‚ùå Le conteneur n'a pas d√©marr√© correctement"
        docker logs $CONTAINER_NAME
    fi
else
    echo "‚ùå Erreur lors du d√©marrage du conteneur"
    exit 1
fi 